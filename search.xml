<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>The 2021 ICPC Asia Taipei Regional Programming Contest</title>
      <link href="/2022/10/23/The-2021-ICPC-Asia-Taipei-Regional-Programming-Contest/"/>
      <url>/2022/10/23/The-2021-ICPC-Asia-Taipei-Regional-Programming-Contest/</url>
      
        <content type="html"><![CDATA[<h1 id="The-2021-ICPC-Asia-Taipei-Regional-Programming-Contest"><a href="#The-2021-ICPC-Asia-Taipei-Regional-Programming-Contest" class="headerlink" title="The 2021 ICPC Asia Taipei Regional Programming Contest"></a>The 2021 ICPC Asia Taipei Regional Programming Contest</h1><h3 id="A-Ice-Cream"><a href="#A-Ice-Cream" class="headerlink" title="A.Ice Cream"></a><a href="https://codeforces.com/gym/103443/problem/A">A.Ice Cream</a></h3><h5 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h5><p>买x个可以送y个，每个的价格是3元，问需要买n个的最小花费</p><h5 id="标签："><a href="#标签：" class="headerlink" title="标签："></a>标签：</h5><p>模拟签到题</p><h5 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h5><p>全买打折和买打折剩下的原价取个最小值就行了</p><h5 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">    ll res=<span class="number">3</span>*((z)/(x+y))*x+z%(x+y)*<span class="number">3</span>,ans=<span class="number">3</span>*((z+x+y<span class="number">-1</span>)/(x+y))*x;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">min</span>(ans,res)&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-Maximum-Sub-Reverse-Matching"><a href="#B-Maximum-Sub-Reverse-Matching" class="headerlink" title="B.Maximum Sub-Reverse Matching"></a><a href="https://codeforces.com/gym/103443/problem/B">B.Maximum Sub-Reverse Matching</a></h3><h5 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h5><ol><li>给定两个长度相等的字符串，两个字符串之间的相似度是两个字符串相同下标下，两个字符串对应位置字符的数量。</li><li>我们可以进行操作，每次操作可以把某个区间的字符串进行翻转。</li><li>问我们初始状态的相似度，和操作后的最大次数。</li><li>如果有多个答案，取操作次数最少的，如果有多个相同次数的，选左边最小的。</li></ol><h5 id="标签：-1"><a href="#标签：-1" class="headerlink" title="标签："></a>标签：</h5><p>dp，前后缀信息预处理</p><h5 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h5><ol><li>对于字符串的相似度，可以先处理出前缀相似度和后缀相似度，对于翻转区间以外的相似度可以直接进行查询。</li><li>处理出翻转区间后能得到的价值，dp[i][j]表示起点为i，长度为j的区间翻转能够取得的相似度，可以发现dp[i][j]&#x3D;dp[i+1][i+j-1-1]+(s1[i]&#x3D;&#x3D;s2[i+j-1])+(s2[i]&#x3D;&#x3D;s1[i+j-1]);</li><li>遍历查询翻转某个区间，根据前后缀和dp值更新最大相似度和答案。</li></ol><h5 id="AC代码：-1"><a href="#AC代码：-1" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">    s1=<span class="string">&#x27;1&#x27;</span>+s1+<span class="string">&#x27;1&#x27;</span>,s2=<span class="string">&#x27;1&#x27;</span>+s2+<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">sum</span>(n+<span class="number">5</span>,<span class="number">0</span>),<span class="built_in">rep</span>(n+<span class="number">5</span>,<span class="number">0</span>);vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">dp</span>(n+<span class="number">5</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n+<span class="number">5</span>,<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>,l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans+=(s1[i]==s2[i]);</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+(s1[i]==s2[i]);</span><br><span class="line">        dp[i][<span class="number">1</span>]=(s1[i]==s2[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        rep[i]=rep[i+<span class="number">1</span>]+(s1[i]==s2[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res=ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;=n;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+j<span class="number">-1</span>&lt;=n;i++)&#123;&#123;</span><br><span class="line">            <span class="type">int</span> x=i+<span class="number">1</span>,y=i+j<span class="number">-1</span><span class="number">-1</span>;</span><br><span class="line">            <span class="type">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;=y)tmp=dp[x][j<span class="number">-2</span>];</span><br><span class="line">            dp[i][j]=tmp+(s1[i]==s2[y+<span class="number">1</span>])+(s2[i]==s1[y+<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span>(res&lt;dp[i][j]+sum[i<span class="number">-1</span>]+rep[y+<span class="number">2</span>])&#123;</span><br><span class="line">                l=i,r=y+<span class="number">1</span>;</span><br><span class="line">                res=dp[i][j]+sum[i<span class="number">-1</span>]+rep[y+<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;res&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;l&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;r&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-Largest-Remainder"><a href="#D-Largest-Remainder" class="headerlink" title="D.Largest Remainder"></a><a href="https://codeforces.com/gym/103443/problem/D">D.Largest Remainder</a></h3><h5 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h5><p>给定n个1到9的数字，问我们这n个数字的排列取余于p，得到的模数最大的排列是什么。</p><h5 id="标签：-2"><a href="#标签：-2" class="headerlink" title="标签："></a>标签：</h5><p>状压dp</p><h5 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h5><p>状压DP，$dp[st][p]$ 表示选取集合 $st$ 且模数为 $p$ 时的最大数值。那么DP转移式为$dp[st|(1 &lt;&lt; i)][j] &#x3D; max(dp[st∣(1 &lt;&lt; i)][j],dp[st][k] ∗ 10 + a[i])$ ，其中 $j$ 是 $(k+a[i])$, $j$ 是 $(k+a[i])%10$ 的余数。</p><h5 id="AC代码：-2"><a href="#AC代码：-2" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dp[<span class="number">1</span> &lt;&lt; <span class="number">16</span>][<span class="number">201</span>];</span><br><span class="line"><span class="type">int</span> n, p, a[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> s = <span class="number">0</span>; s &lt; (<span class="number">1</span> &lt;&lt; n); ++s)</span><br><span class="line">    &#123; <span class="comment">//枚举状态</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        &#123; <span class="comment">//在未选集合中选一个数</span></span><br><span class="line">            <span class="keyword">if</span> ((s &gt;&gt; i) &amp; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; p; ++j)</span><br><span class="line">            &#123; <span class="comment">//枚举模数</span></span><br><span class="line">                <span class="keyword">if</span> (dp[s][j] == <span class="number">-1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                ll nxt = (j * <span class="number">10ll</span> + a[i]) % p; <span class="comment">//下一个模数</span></span><br><span class="line">                dp[s | (<span class="number">1ll</span> &lt;&lt; i)][nxt] = <span class="built_in">max</span>(dp[s | (<span class="number">1ll</span> &lt;&lt; i)][nxt], dp[s][j] * <span class="number">10ll</span> + a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (dp[(<span class="number">1ll</span> &lt;&lt; n) - <span class="number">1</span>][i] != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, dp[(<span class="number">1ll</span> &lt;&lt; n) - <span class="number">1</span>][i]);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin&gt;&gt;t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="I-Seesaw"><a href="#I-Seesaw" class="headerlink" title="I.Seesaw"></a><a href="https://codeforces.com/gym/103443/problem/I">I.Seesaw</a></h3><h5 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h5><p>给定一个天平两边的物品重量，左边为奇数，右边为偶数，只有1和2可以进行交换，问我们最少能操作多少次让天平平衡，不存在答案的话输出-1</p><h5 id="标签：-3"><a href="#标签：-3" class="headerlink" title="标签："></a>标签：</h5><p>背包模型状态dp</p><h5 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h5><p>当我们交换 $ai$ 和 $bj$ 时(题目要求 $ai&#x3D;&#x3D;1$ 且 $bj&#x3D;&#x3D;2$ )，左右的重量差值会减少 $i + j$ ，题意转化为从左右分别选取 $k$ 个物品使得左右选取的质量之和为重量差值 $sum$。那么我们用 $dp[i][j]$ 表示前 $i$ 个物品达到重量 $j$ 的方案是否可行，就可以用 bitset 优化。转移方程为 $dp[j]∣&#x3D; dp[j−a[i]] &lt;&lt; 1$ ,注意边界条件，sum&lt;0和sum太大都要直接判结果.</p><h5 id="AC代码：-3"><a href="#AC代码：-3" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;a,b;</span><br><span class="line">a.<span class="built_in">push_back</span>(<span class="number">0</span>),b.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>,x;</span><br><span class="line"><span class="type">int</span> res1=<span class="number">0</span>,res2=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)a.<span class="built_in">push_back</span>(i),res1+=i;</span><br><span class="line">l+=x*i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">2</span>)b.<span class="built_in">push_back</span>(i);res2+=i;</span><br><span class="line">r+=x*i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r||r-l&gt;<span class="number">50001</span>)&#123;</span><br><span class="line">cout&lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">n=a.<span class="built_in">size</span>(),m=b.<span class="built_in">size</span>();</span><br><span class="line"><span class="type">int</span> sum=r-l;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">vector&lt;bitset&lt;205&gt;&gt;dp1(sum+2),dp2(sum+2);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">dp1[0]=1;</span></span><br><span class="line"><span class="comment">for(int i=1;i&lt;n;i++)&#123;</span></span><br><span class="line"><span class="comment">for(int j=sum;j&gt;=a[i];j--)&#123;</span></span><br><span class="line"><span class="comment">dp1[j]|=(dp1[j-a[i]]&lt;&lt;1);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">dp2[0]=1;</span></span><br><span class="line"><span class="comment">for(int i=1;i&lt;m;i++)&#123;</span></span><br><span class="line"><span class="comment">for(int j=sum;j&gt;=b[i];j--)&#123;</span></span><br><span class="line"><span class="comment">dp2[j]|=(dp2[j-b[i]]&lt;&lt;1);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">for(int i=0;i&lt;min(n,m);i++)&#123;</span></span><br><span class="line"><span class="comment">for(int j=0;j&lt;=sum;j++)&#123;</span></span><br><span class="line"><span class="comment">int k=sum-j;</span></span><br><span class="line"><span class="comment">if(dp1[j][i]&amp;&amp;dp2[k][i])&#123;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">return;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">cout&lt;&lt; -1&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">dp1</span>(n+<span class="number">2</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(sum,<span class="number">0</span>)),<span class="built_in">dp2</span>(m+<span class="number">2</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(sum,<span class="number">0</span>));</span><br><span class="line">dp1[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=i;k&gt;=<span class="number">1</span>;k--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=sum;j&gt;=a[i];j--)&#123;</span><br><span class="line">dp1[k][j]|=(dp1[k<span class="number">-1</span>][j-a[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">dp2[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=i;k&gt;=<span class="number">1</span>;k--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=sum;j&gt;=b[i];j--)&#123;</span><br><span class="line">dp2[k][j]|=(dp2[k<span class="number">-1</span>][j-b[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">min</span>(n,m);i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=sum;j++)&#123;</span><br><span class="line"><span class="type">int</span> k=sum-j;</span><br><span class="line"><span class="keyword">if</span>(dp1[i][j]&amp;&amp;dp2[i][k])&#123;</span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="J-Transportation-Network"><a href="#J-Transportation-Network" class="headerlink" title="J.Transportation Network"></a><a href="https://codeforces.com/gym/103443/problem/J">J.Transportation Network</a></h3><h5 id="题意：-4"><a href="#题意：-4" class="headerlink" title="题意："></a>题意：</h5><p>阅读理解，给我们一个图的建边方式权值，要我们构造一颗以0为根，根节点有p个儿子，不超过|S|，最高为三层的树，全任意两点间的距离和</p><h5 id="标签：-4"><a href="#标签：-4" class="headerlink" title="标签："></a>标签：</h5><p>模拟，建图，dfs</p><h5 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h5><p>我们可以尽量构造权值为1的边，也就是让|S|的结点尽量接到根节点下，然后再剩下的结点接在根节点下或者第一个|S|里面的结点下面，这样可以贪心地构造出权值和最小的树，建完树后再进行dfs找到每条边两边的结点个数，相乘就是这个边被经过的次数，所以边的和的两倍加起来就是答案。</p><h5 id="AC代码：-4"><a href="#AC代码：-4" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,b,p;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;b&gt;&gt;p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;b;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;e[n+<span class="number">1</span>];</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">num</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=p;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b)&#123;</span><br><span class="line">            e[<span class="number">0</span>].<span class="built_in">push_back</span>(&#123;i,<span class="number">1</span>&#125;);</span><br><span class="line">            e[i].<span class="built_in">push_back</span>(&#123;<span class="number">0</span>,<span class="number">1</span>&#125;);   </span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            e[<span class="number">0</span>].<span class="built_in">push_back</span>(&#123;i,<span class="number">2</span>&#125;);</span><br><span class="line">            e[i].<span class="built_in">push_back</span>(&#123;<span class="number">0</span>,<span class="number">2</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=p+<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        e[<span class="number">1</span>].<span class="built_in">push_back</span>(&#123;i,<span class="number">1</span>&#125;);</span><br><span class="line">        e[i].<span class="built_in">push_back</span>(&#123;<span class="number">1</span>,<span class="number">1</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    function&lt;<span class="type">void</span>(<span class="type">int</span>,<span class="type">int</span>)&gt; dfs=[&amp;](<span class="type">int</span> u,<span class="type">int</span> fa)&#123;</span><br><span class="line">        num[u]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> [v,w]:e[u])&#123;</span><br><span class="line">            <span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(v,u);</span><br><span class="line">            ans+=num[v]*(n-num[v])*w;</span><br><span class="line">            num[u]+=num[v];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">-1</span>);</span><br><span class="line">    cout&lt;&lt;ans*<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="M-Escaping-the-Foggy-Forest"><a href="#M-Escaping-the-Foggy-Forest" class="headerlink" title="M.Escaping the Foggy Forest"></a><a href="https://codeforces.com/gym/103443/problem/M">M.Escaping the Foggy Forest</a></h3><h5 id="题意：-5"><a href="#题意：-5" class="headerlink" title="题意："></a>题意：</h5><p>给定一个n*m的矩阵，问那些点满足前面和后面和题意给定的要求一样</p><h5 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h5><p>模拟签到题</p><h5 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h5><p>枚举每一个点，判断四个方向是否存在一个合法就可以了。</p><h5 id="AC代码：-5"><a href="#AC代码：-5" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(c[i<span class="number">-1</span>][j]==y&amp;&amp;c[i][j+<span class="number">1</span>]==z)f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(c[i][j<span class="number">-1</span>]==y&amp;&amp;c[i<span class="number">-1</span>][j]==z)f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(c[i+<span class="number">1</span>][j]==y&amp;&amp;c[i][j<span class="number">-1</span>]==z)f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(c[i][j+<span class="number">1</span>]==y&amp;&amp;c[i+<span class="number">1</span>][j]==z)f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;c[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">check</span>(i,j)&amp;&amp;c[i][j]==x)ans.<span class="built_in">push_back</span>(&#123;i<span class="number">-1</span>,j<span class="number">-1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> [u,v]:ans)&#123;</span><br><span class="line">        cout&lt;&lt;u&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;v&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin&gt;&gt;t;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XCPC题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCPC-2018-桂林</title>
      <link href="/2022/10/20/CCPC-2018-%E6%A1%82%E6%9E%97/"/>
      <url>/2022/10/20/CCPC-2018-%E6%A1%82%E6%9E%97/</url>
      
        <content type="html"><![CDATA[<h1 id="CCPC-2018-桂林"><a href="#CCPC-2018-桂林" class="headerlink" title="CCPC-2018-桂林"></a>CCPC-2018-桂林</h1><h3 id="D-Bits-Reverse"><a href="#D-Bits-Reverse" class="headerlink" title="D.Bits Reverse"></a><a href="https://codeforces.com/group/cQGUBWxrFs/contest/398679/problem/D">D.Bits Reverse</a></h3><p>标签：位运算，模拟</p><h5 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h5><p>给定两个数a和b，对于a的二进制形式对于相隔一位的位置可以交换，问我们是否可以通过这些操作让a&#x3D;b，可以的话求出最小操作次数。</p><h5 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h5><p>对于这道题可以奇偶位分开考虑，如果两个数的奇数位置和偶数位置的1个数相等，那么就可以化到相等，对于最小操作次数，只要记录下相邻最近的1的位置进行交换，就能贪心地得到最小值。</p><h5 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">idx</span>(<span class="number">100</span>,<span class="number">0</span>),<span class="built_in">idy</span>(<span class="number">100</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> flag)-&gt;<span class="type">int</span>&#123;</span><br><span class="line"><span class="type">int</span> cnt0=<span class="number">0</span>,cnt1=<span class="number">0</span>;</span><br><span class="line">ll tmp=x,res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;tmp;i++,tmp&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==flag&amp;&amp;tmp%<span class="number">2</span>==<span class="number">1</span>)idx[++cnt0]=i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmp=y;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;tmp;i++,tmp&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==flag&amp;&amp;tmp%<span class="number">2</span>==<span class="number">1</span>)idy[++cnt1]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt0!=cnt1)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt0;i++)&#123;</span><br><span class="line">res+=<span class="built_in">abs</span>(idx[i]-idy[i])/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(<span class="number">0</span>)==<span class="number">-1</span>||<span class="built_in">check</span>(<span class="number">1</span>)==<span class="number">-1</span>)cout&lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;(<span class="built_in">check</span>(<span class="number">0</span>)+<span class="built_in">check</span>(<span class="number">1</span>))&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="H-Hamming-Distance"><a href="#H-Hamming-Distance" class="headerlink" title="H. Hamming Distance"></a><a href="https://codeforces.com/group/cQGUBWxrFs/contest/398679/problem/H">H. Hamming Distance</a></h3><p>标签：贪心，思维</p><h5 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h5><p>给定两个字符串，问我们构造出字典序最小的长度和给定字符串相等的字符串，两个字符串的Hamming距离相等。（一个字符串和另外一个字符串不相等的字符数量）</p><h5 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h5><ol><li>对两个串进行考虑，如果两个串某个位置的字符相等，那么直接填为’a’</li><li>对于不相等的尽量填‘a’，但是可能在原串出现’a’，那么会导致两次不相等，那么如果后面可以填入其他数来满足，那么这个位置就能填入‘a’</li><li>从后到前记录不同的位置的数量，这些就是可以松弛的地方</li><li>记录一个cnt，与是是s1不相同那么cnt++，与s2不相同那么cnt–，那么最后就是cnt&#x3D;0。</li><li>那么对于每个位置，循环26个字母，对于这个字母填完后面可以满足cnt&#x3D;0，那么就填入，贪心地填就是答案。</li></ol><h5 id="AC代码：-1"><a href="#AC代码：-1" class="headerlink" title="AC代码："></a>AC代码：</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    cin&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">    <span class="type">int</span> n=s1.<span class="built_in">size</span>(),cnt=<span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">dp</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        dp[i]=dp[i+<span class="number">1</span>]+(s1[i]!=s2[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> check=[&amp;](<span class="type">char</span> c,<span class="type">int</span> idx)&#123;</span><br><span class="line">        <span class="type">int</span> tmp=cnt;</span><br><span class="line">        <span class="keyword">if</span>(c!=s1[idx])tmp++;</span><br><span class="line">        <span class="keyword">if</span>(c!=s2[idx])tmp--;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">abs</span>(tmp)&lt;=dp[idx+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[i])&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c=<span class="string">&#x27;a&#x27;</span>;c&lt;=<span class="string">&#x27;z&#x27;</span>;c++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">check</span>(c,i))&#123;</span><br><span class="line">                cout&lt;&lt;c;</span><br><span class="line">                <span class="keyword">if</span>(c!=s1[i])cnt++;</span><br><span class="line">                <span class="keyword">if</span>(c!=s2[i])cnt--;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-Greatest-Common-Divisor"><a href="#G-Greatest-Common-Divisor" class="headerlink" title="G. Greatest Common Divisor"></a><a href="https://codeforces.com/group/cQGUBWxrFs/contest/398679/problem/G">G. Greatest Common Divisor</a></h3><p>标签：数论，差分，gcd</p><h5 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h5><p>给定一个数组，每次操作可以把整个数组加一，问我们最少可以通过多少次操作让这个数组 gcd &gt; 1，无解的话输出-1。</p><h5 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h5><p>对于一个数组的 gcd，可以转化为第一个元素和后面元素差分数组的gcd，然后对数组加一，那么差分数组的值不会变化，只会变化第一个数，对gcd进行因数分解，再判断与第一个数相差最小并且 gcd &gt; 1 的最小值，需要分多钟情况，和判断的先后顺序。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,cnt=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">0</span>)cnt=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        res=__gcd(res,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!cnt)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;<span class="number">1</span>;i--)&#123;</span><br><span class="line">        res=__gcd(res,a[i]-a[i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=res;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(res%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> x=(i-a[<span class="number">1</span>]%i)%i,y=(res/i-a[<span class="number">1</span>]%(res/i))%(res/i);</span><br><span class="line">            ans=<span class="built_in">min</span>(&#123;ans,x,y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="built_in">min</span>(ans,(res-a[<span class="number">1</span>]%res)%res);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="J-Stone-Game"><a href="#J-Stone-Game" class="headerlink" title="J.Stone Game"></a><a href="https://codeforces.com/group/cQGUBWxrFs/contest/398679/problem/J">J.Stone Game</a></h3><p>标签：拓扑排序+博弈</p><h5 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h5><p>给定一些石堆，相邻石堆之间有大小关系，每次操作可以把其中一颗石头丢掉，但是不能改变相邻之间的大小关系，谁无法操作那么谁就输了，Alice先手，问谁能赢。</p><h5 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h5><ol><li>对于相邻的大小关系，可以建立有向边，那么对于这些关系，可以建成一个DAG</li><li>对于这题可以确认最终状态，那么可以操作的次数就是总数减去最终态</li><li>如果结果是奇数，那么先手必胜，偶数后手必胜</li><li>对于构成的DAG可以用dp转移，得到最终态的数量</li></ol><h5 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int ll</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n+<span class="number">1</span>,<span class="number">0</span>),<span class="built_in">in</span>(n+<span class="number">1</span>,<span class="number">0</span>),<span class="built_in">ans</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;e[n+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[i<span class="number">-1</span>])e[i<span class="number">-1</span>].<span class="built_in">push_back</span>(i),in[i]++;</span><br><span class="line">        <span class="keyword">else</span> e[i].<span class="built_in">push_back</span>(i<span class="number">-1</span>),in[i<span class="number">-1</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt;Q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(in[i]==<span class="number">0</span>)Q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> u=Q.<span class="built_in">front</span>();</span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:e[u])&#123;</span><br><span class="line">            ans[v]=<span class="built_in">max</span>(ans[u]+<span class="number">1</span>,ans[v]);</span><br><span class="line">            in[v]--;</span><br><span class="line">            <span class="keyword">if</span>(in[v]==<span class="number">0</span>)Q.<span class="built_in">push</span>(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        res+=a[i]-ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res%<span class="number">2</span>!=<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;Alice\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;Bob\n&quot;</span>;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XCPC题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/15/hello-world/"/>
      <url>/2022/10/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
